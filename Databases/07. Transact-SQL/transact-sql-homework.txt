-------------------------------------------------------------------
1. Write a stored procedure that selects the full names of all persons.

USE AccountSystem
GO

CREATE PROC dbo.usp_SelectFullNames
AS
  SELECT FirstName + ' ' + LastName AS FullName 
  FROM Persons
GO

EXEC usp_SelectFullNames
-------------------------------------------------------------------
2. Create a stored procedure that accepts a number as a parameter and returns all persons who have more money in their accounts than the supplied number.

USE AccountSystem
GO

CREATE PROC dbo.usp_SelectBalanceHigherThan ( @money int )
AS
  SELECT e.FirstName, e.LastName, a.Balance
  FROM Persons e JOIN Accounts a ON e.PersonID = a.PersonID
  WHERE a.Balance >= @money
GO

EXEC usp_SelectBalanceHigherThan 30
-------------------------------------------------------------------
3.Create a function that accepts as parameters – sum, yearly interest rate and number of months. It should calculate and return the new sum. Write a SELECT to test whether the function works as expected.

CREATE FUNCTION usf_CalcInterest(@sum money, @interestRate money, @months int)
  RETURNS money
AS
BEGIN
  RETURN @sum + @interestRate * @months
END

SELECT dbo.usf_CalcInterest(3000, 20, 5)
-------------------------------------------------------------------
4.Create a stored procedure that uses the function from the previous example to give an interest to a person's account for one month. It should take the AccountId and the interest rate as parameters.

USE AccountSystem
GO

CREATE PROC dbo.usp_CalculateInterest @accID INT, @months MONEY = 1
AS
  SELECT dbo.usf_CalcInterest(Balance, 20, @months)
  FROM Accounts
  WHERE AccountID = @accID
GO

EXEC usp_CalculateInterest 2
-------------------------------------------------------------------
5. Add two more stored procedures WithdrawMoney( AccountId, money) and DepositMoney (AccountId, money) that operate in transactions.
 +++++++++++
	USE AccountSystem
	GO

	CREATE PROC dbo.usp_WithdrawMOney @accID INT, @amount MONEY
	AS
	  UPDATE Accounts 
	  SET Balance = Balance - @amount
	  WHERE AccountID = @accID
	GO

	EXEC usp_WithdrawMOney 2, 200
 +++++++++++
	USE AccountSystem
	GO

	CREATE PROC dbo.usp_DepositMoney @accID INT, @amount MONEY
	AS
	  UPDATE Accounts 
	  SET Balance = Balance + @amount
	  WHERE AccountID = @accID
	GO

	EXEC usp_DepositMoney 2, 200
 +++++++++++
 
-------------------------------------------------------------------
6.Create another table – Logs(LogID, AccountID, OldSum, NewSum). Add a trigger to the Accounts table that enters a new entry into the Logs table every time the sum on an account changes.

USE AccountSystem
GO

CREATE TRIGGER tr_BalanceUpdate ON Accounts FOR UPDATE
AS
	BEGIN
		INSERT INTO Logs
			SELECT i.AccountID,
					   d.Balance,
					   i.Balance
			FROM inserted i
			JOIN deleted d
			ON d.AccountID = i.AccountID
	END
GO

EXEC  usp_DepositMoney 2, 200
GO
-------------------------------------------------------------------
